
"a,b,c" split: "," | self join: " " | reverse

"a,b,c" | split "," | join " " | reverse


method count-words: text
  return text.split " " | fold |hash, word| do
     hash set: word => (hash[word] || 0) + 1
  end, with: [:]
end


<io> open: "test.txt", each: |line| do
  <io> print: line
end


method collided-with: <rock> rock

method collided-with: rock :: <rock>

local rock :: <rock>

local <rock> rock


$ add-object: "window", with: |window| do
  window add-method: "origin", block: |origin| origin
end

include <callable>


"john smith" | split " " | reverse | join ", "

"john smith" | split: " " | reverse | join: ", "


[1, 2, 3] map: |n| n sin

[1, 2, 3] map: #sin

#sin [1, 2, 3]

