
block = |a, b| a + b
block [2, 3]

list sort: |a, b| a < b


"a,b,c" split: "," | self join: " " | reverse

method capitalize
   "abc" | self head upper-case ~ self tail
end

evens-squared = [1..10] map: |n| n even ? n * n

canvas draw-text: "Hello, world", size: 16px, weight: 'bold

method count-words: text
  return text.split " " | fold |hash, word| do
     hash set: word => (hash[word] || 0) + 1
  end, with: [:]
end


<io> print: "Hello, world"

"foo" self head upper ~ self tail

"a,b,c" split: "," | self join: "," | self reverse

<system> exit

<io> open: "test.txt", each: |line| do
  <io> print: line
end


method map: block
  local array = []
  
  self each: |item|
    array << block [item]
  end
  
  return array
end


method collided-with: <rock> rock

method collided-with: rock :: <rock>

local rock :: <rock>

local <rock> rock

